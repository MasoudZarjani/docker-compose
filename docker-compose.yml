services:
  redis:
    image: redis:latest
    container_name: redis_service
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - app-network
      
  mongodb:
    image: mongo:latest // 4.4.29
    container_name: mongo_service
    restart: always
    ports:
      - "11223:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_MONGO_PASSWORD}
    volumes:
      - ./mongo_data:/data/db
    networks:
      - app-network
      
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - ./npm_data:/data
      - ./npm_letsencrypt:/etc/letsencrypt
    networks:
      - app-network
      
  postgres:
    image: postgres:latest
    container_name: postgres_service
    restart: always
    environment:
      - POSTGRES_DB=${DB_POSTGRESDB}
      - POSTGRES_USER=${DB_POSTGRES_USER}
      - POSTGRES_PASSWORD=${DB_POSTGRES_PASSWORD}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
      
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB}
      - DB_POSTGRESDB_HOST=${DB_POSTGRES_HOST}
      - DB_POSTGRESDB_PORT=${DB_POSTGRES_PORT}
      - DB_POSTGRESDB_USER=${DB_POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRES_PASSWORD}

      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}

      - N8N_HOST=${N8N_HOST}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - N8N_PORT=${N8N_PORT}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - GENERIC_TIMEZONE=${TZ}
      - N8N_RUNNERS_ENABLED=${N8N_RUNNERS_ENABLED}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=${N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS}
    volumes:
      - ./n8n_data:/home/node/.n8n
    expose:
      - "5678"
    depends_on:
      - postgres
    networks:
      - app-network
      
mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_MYSQL_DATABASE}
      MYSQL_USER: ${DB_MYSQL_USER}
      MYSQL_PASSWORD: ${DB_MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_MYSQL_ROOT_PASSWORD}
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - app-network
      
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${DB_MYSQL_ROOT_PASSWORD} # Match the root password from db service
    depends_on:
      - mysql
    networks:
      - app-network
      
volumes:
  redis_data:
  mongo_data:
  npm_data:
  npm_letsencrypt:
  postgres_data:
  
networks:
  app-network:
    external: true
